{"info":{"_postman_id":"d7b62b43-be2b-4098-8a38-6dcb6f364bcd","name":"Star Wars API","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"People","item":[{"name":"Get First Person","event":[{"listen":"test","script":{"id":"2ab8a205-a8b3-438d-9ee7-e02c9eee549d","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Check that the response body contains Luke\", function () {\r","    pm.expect(pm.response.text()).to.include(\"Luke\");\r","});\r","\r","pm.test(\"Check the Luke's height is 172cm\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.height).to.eql(\"172\"); \r","});\r","\r","//Create a test that verifies Luke's eye color\r","pm.test(\"Check the Luke's eye color is Blue\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.eye_color).to.eql(\"blue\");\r","});\r","\r","//Create a test that verifies the  of Luke's \r","pm.test(\"Check the URL of Luke's home world\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.homeworld).to.eql(\"https://swapi.dev/api/planets/1/\");\r","});\r","\r","//HEADERS ASSERTIONS\r","\r","pm.test(\"Content-Type is present and have the expected result\", function () {\r","    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r","});\r","   \r","\r","//HOMEWORK\r","/*\r","1) Check that the server (a header) in nginx.\r","2) Check that the response time for this call is less than 500 milliseconds\r","3) Check that Luke appears in 4 films\r","*/\r","\r","pm.test(\"Check that the server (a header) in nginx\", function () {\r","    pm.response.to.have.header(\"server\", \"nginx/1.16.1\");\r","});\r","\r","pm.test(\"Check that the response time for this call is less than 500ms\", function () {\r","    pm.expect(pm.response.responseTime).to.be.below(500);\r","});\r","\r","pm.test(\"Check that Luke appears in 4 films\", function () {\r","    var jsonData = pm.response.json();\r","    pm.expect(jsonData.films.length).to.eql(4);\r","});\r","\r",""],"type":"text/javascript"}}],"id":"816049b9-f250-4cea-b518-02bd27a485ab","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/people/{{peopleId}}","host":["{{baseUrl}}"],"path":["people","{{peopleId}}"]}},"response":[]},{"name":"Get All People","id":"2a2f2f51-3c09-469b-be6e-845ae43dc739","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/people/","host":["{{baseUrl}}"],"path":["people",""]}},"response":[]},{"name":"Get a Person","event":[{"listen":"prerequest","script":{"id":"152fad64-72f6-4946-8e0c-3ab102fb45ef","exec":["\r","//Emulando el looping del libro\r","//Creando la variable del URL de forma dinamica en el Pre-request\r","pm.environment.set(\"person_id\", 1); \r","//Leyendo la residentList del Collection la cual toma los datos del request Get Homeworld\r","var residentList = pm.collectionVariables.get(\"residentList\");\r","//Tomando el valor de la variable counter del request Get Homeworld del enviroment\r","var currentCount = pm.environment.get(\"counter\");\r","\r","//Condicion para detener el loop del comando setNextRequest. Este se detiene luego de que el contador llega al tama√±o del arreglo de residentList\r","if (currentCount < residentList.length) {\r","    //proceso para extraer el id del string de los residentes del planeta. Se separa por slash y se extrae el numero de la persona.\r","    randomResident = residentList[currentCount];\r","    var splitResidentStr = randomResident.split(\"/\");\r","    var personId = splitResidentStr[splitResidentStr.length-2];\r","    //Fin del proceso de extraer el id del residente\r","    pm.environment.set(\"person_id\", personId);\r","    pm.environment.set(\"counter\", currentCount+1);\r","    //llama el request que se le especifica como parametro, creando un loop.\r","    postman.setNextRequest(\"Get a Person\");\r","\r","}\r",""],"type":"text/javascript"}}],"id":"e2b30fc2-aa6d-4e7d-93f6-63b77c7f2c3d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/people/{{person_id}}","host":["{{baseUrl}}"],"path":["people","{{person_id}}"]}},"response":[]}],"id":"cf509424-aae0-4d75-a8e3-765c539290b8"},{"name":"Films","item":[],"id":"d6657ca5-e73f-4a84-a332-7e0bb939d70a"},{"name":"Species","item":[],"id":"5cbcf297-9a14-4754-aad6-78c3f5a27e6e"},{"name":"Vehicles","item":[],"id":"cef115db-89a9-4d88-96d3-49c7a8862929"},{"name":"Planets","item":[{"name":"Get Homeworld","event":[{"listen":"test","script":{"id":"9bb0c6a4-9440-48cb-a847-14a6f79da8cb","exec":["// Atrapar la data de este request\r","\r","var jsonData = pm.response.json();\r","var planetResidents = jsonData.residents;\r","pm.collectionVariables.set(\"residentList\", planetResidents);\r","\r","//Setiando un counter para usar el metodo SetNextRequest\r","pm.environment.set(\"counter\", 0);\r","\r","postman.setNextRequest(\"Get a person\"); \r",""],"type":"text/javascript"}}],"id":"f2a6ca53-46ee-422d-b809-bbb02e7106c9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":""},"url":{"raw":"{{base_url}}/planets/1","host":["{{base_url}}"],"path":["planets","1"]}},"response":[]}],"id":"ad594b0e-a85c-4f21-84ad-68cdcbba29e3"},{"name":"Integration Tests","item":[],"id":"39b683e7-4d37-413e-96ba-015f8f36e3a9"}],"event":[{"listen":"prerequest","script":{"id":"7312e340-517a-461e-9054-83260980ea19","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"f2f528bd-7d98-4fe4-850e-2a2a07842aa9","type":"text/javascript","exec":[""]}}],"variable":[{"id":"5bb66c35-d657-4805-ab3d-3feace32c41d","key":"baseUrl","value":"https://swapi.dev/api","type":"string"},{"id":"7c85ac19-43ae-481b-9d70-278d307245ff","key":"residentList","value":""}]}